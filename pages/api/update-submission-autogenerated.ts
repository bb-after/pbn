import { NextApiRequest, NextApiResponse } from 'next';
import mysql from 'mysql2/promise';

const dbConfig = {
  host: process.env.DB_HOST_NAME,
  user: process.env.DB_USER_NAME,
  password: process.env.DB_PASSWORD,
  database: process.env.DB_DATABASE,
};

export default async function handler(req: NextApiRequest, res: NextApiResponse) {
  if (req.method !== 'PUT') {
    return res.status(405).json({ message: 'Method not allowed' });
  }

  const { submissionId, autogenerated } = req.body;

  if (!submissionId || (autogenerated !== 0 && autogenerated !== 1)) {
    return res.status(400).json({
      message: 'submissionId is required and autogenerated must be 0 (manual) or 1 (automated)',
    });
  }

  let connection;
  try {
    connection = await mysql.createConnection(dbConfig);

    // Update the autogenerated flag
    const [result] = await connection.execute(
      `UPDATE superstar_site_submissions 
       SET autogenerated = ?, modified_at = NOW() 
       WHERE id = ?`,
      [autogenerated, submissionId]
    );

    if ((result as any).affectedRows === 0) {
      return res.status(404).json({ message: 'Submission not found' });
    }

    res.status(200).json({
      message: 'Autogenerated flag updated successfully',
      autogenerated: autogenerated,
    });
  } catch (error) {
    console.error('Database error:', error);
    res.status(500).json({ message: 'Internal server error' });
  } finally {
    if (connection) {
      await connection.end();
    }
  }
}
